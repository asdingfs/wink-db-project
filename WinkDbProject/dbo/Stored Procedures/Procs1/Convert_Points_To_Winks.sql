CREATE PROC [dbo].[Convert_Points_To_Winks]
@customer_tokenid VARCHAR(255),
@merchant_id int

AS

DECLARE @CUSTOMER_ID INT
DECLARE @MERCHANT_TOTAL_WINKS INT
DECLARE @CUSTOMER_TOTAL_EARNED_WINKS_BY_MERCHANT INT
DECLARE @MERCHANT_BALANCE_WINKS INT
DECLARE @CUSTOMER_BALANCE_WINKS INT
DECLARE @CUSTOMER_BALANCE_POINTS INT
DECLARE @WINKS INT
DECLARE @CUSTOMER_WINKS INT
DECLARE @REDEEMED_POINTS INT
DECLARE @CUSTOMER_WINKS_BALANCE INT
DECLARE @CUSTOMER_USED_WINKS INT


BEGIN

	IF EXISTS(SELECT * FROM CUSTOMER WHERE auth_token = @customer_tokenid)                            
	BEGIN 
		SELECT TOP 1 @CUSTOMER_ID = CUSTOMER_ID FROM CUSTOMER WHERE auth_token = @customer_tokenid 
		SELECT @MERCHANT_TOTAL_WINKS = SUM(TOTAL_WINKS) FROM CAMPAIGN WHERE MERCHANT_ID = @merchant_id 
		AND CONVERT(CHAR(10),GETDATE(),111) >= CONVERT(CHAR(10),CAMPAIGN_START_DATE,111) 
		IF EXISTS (SELECT * FROM CUSTOMER_EARNED_WINKS WHERE MERCHANT_ID = @merchant_id)
		BEGIN
			SELECT @CUSTOMER_TOTAL_EARNED_WINKS_BY_MERCHANT = SUM(TOTAL_WINKS) FROM CUSTOMER_EARNED_WINKS WHERE MERCHANT_ID = @merchant_id
			SET @MERCHANT_BALANCE_WINKS = @MERCHANT_TOTAL_WINKS-@CUSTOMER_TOTAL_EARNED_WINKS_BY_MERCHANT
		END
		ELSE
		BEGIN
			SET @MERCHANT_BALANCE_WINKS = @MERCHANT_TOTAL_WINKS-0
		END
		IF @MERCHANT_BALANCE_WINKS = 0
			BEGIN
				SELECT '0' as response_code, 'No Points to redeem in Merchant' as response_message 
				RETURN
			END
		ELSE 
			BEGIN
		IF EXISTS(SELECT * FROM CUSTOMER_BALANCE WHERE CUSTOMER_ID = @CUSTOMER_ID)
		BEGIN
		
			SELECT @CUSTOMER_BALANCE_POINTS = (TOTAL_POINTS - USED_POINTS) FROM CUSTOMER_BALANCE WHERE CUSTOMER_ID=@CUSTOMER_ID
			IF @CUSTOMER_BALANCE_POINTS = 0 
			BEGIN
				SELECT '0' as response_code, 'No Points to redeem' as response_message 
				RETURN
			END
			ELSE
			BEGIN
				SELECT @CUSTOMER_WINKS = @CUSTOMER_BALANCE_POINTS/RATE_VALUE FROM RATE_CONVERSION WHERE RATE_CODE = 'points_per_wink'
				IF @CUSTOMER_WINKS <= @MERCHANT_BALANCE_WINKS
				    BEGIN 
					SET @WINKS = @CUSTOMER_WINKS
					END
				ELSE
				    BEGIN
					SET @WINKS = @MERCHANT_BALANCE_WINKS
					END
				
				SELECT @REDEEMED_POINTS = @WINKS*RATE_VALUE FROM RATE_CONVERSION WHERE RATE_CODE = 'points_per_wink'
				
				INSERT INTO CUSTOMER_EARNED_WINKS 
				(CUSTOMER_ID,MERCHANT_ID,TOTAL_WINKS,REDEEMED_POINTS,CREATED_AT,UPDATED_AT) VALUES
				(@CUSTOMER_ID,@merchant_id,@WINKS,@REDEEMED_POINTS,GETDATE(),GETDATE())
				
				IF(@@ROWCOUNT>0)
				BEGIN
					UPDATE CUSTOMER_BALANCE SET USED_POINTS = USED_POINTS+@REDEEMED_POINTS, TOTAL_WINKS = TOTAL_WINKS+@WINKS WHERE CUSTOMER_ID = @CUSTOMER_ID
					SELECT @CUSTOMER_USED_WINKS = USED_WINKS ,@CUSTOMER_WINKS_BALANCE = TOTAL_WINKS-USED_WINKS, @CUSTOMER_BALANCE_POINTS = TOTAL_POINTS-USED_POINTS FROM CUSTOMER_BALANCE WHERE CUSTOMER_ID=@CUSTOMER_ID
					SELECT '1' as response_code, 'Success' as response_message,
					 @CUSTOMER_WINKS_BALANCE AS CUSTOMER_WINKS_BALANCE,
					 @REDEEMED_POINTS AS REDEEMED_POINTS,
					 @WINKS AS WINK_ADDED,
					 @CUSTOMER_USED_WINKS as USED_WINKS,
  					 @CUSTOMER_BALANCE_POINTS AS CUSTOMER_POINTS_BALANCE
					RETURN
				END
				ELSE
				BEGIN
					SELECT '0' as response_code, 'Insert Fails' as response_message 
					RETURN
				END
			END
			
		END
		ELSE
		BEGIN
			SELECT '0' as response_code, 'No Points to redeem' as response_message 
			RETURN
		END
		END
	END
	ELSE
	BEGIN
		SELECT '0' as response_code, 'Customer does not exist' as response_message 
		RETURN
	END
	
END
